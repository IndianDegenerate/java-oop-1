A Bank Account Class

1.  File Account.java contains a partial definition for a class representing a bank account.
		Save it to your directory and study it to see what methods it contains.
		Then complete the Account class as described below.
		Note that you wonâ€™t be able to test your methods until you write ManageAccounts in question #2.

	a.  Fill in the code for method toString, which should return a string containing the name,
			account number, and balance for the account.

	b.  Fill in the code for method chargeFee, which should deduct a service fee from the account.

	c.  Modify chargeFee so that instead of returning void, it returns the new balance.
			Note that you will have to make changes in two places.

	d.  Fill in the code for method changeName which takes a string as a parameter and changes the
			name on the account to be that string.

2.	File ManageAccounts.java contains a shell program that uses the Account class above.
		Save it to your directory, and complete it as indicated by the comments.

3.	Modify ManageAccounts so that it prints the balance after the calls to chargeFees.
		Instead of using the getBalance method like you did after the deposit and withdrawal,
		use the balance that is returned from the chargeFees method.
		You can either store it in a variable and then print the value of the variable,
		or embed the method call in a println statement.



// *******************************************************
// Account.java
//
// A bank account class with methods to deposit to, withdraw from,
// change the name on, charge a fee to, and print a summary of the account.
// *******************************************************

public class Account {

	private double balance; private String name; private long acctNum;

	// ---------------------------------------------
	//Constructor -- initializes balance, owner, and account number
	// --------------------------------------------
	public Account(double initBal, String owner, long number) {
		balance = initBal; name = owner; acctNum = number;
	}

	// --------------------------------------------
	// Checks to see if balance is sufficient for withdrawal.
	// If so, decrements balance by amount; if not, prints message.
	// --------------------------------------------
	public void withdraw(double amount) {
		if (balance >= amount) {
			balance -= amount;
		} else {
			System.out.println("Insufficient funds");
		}
	}


	// --------------------------------------------
	//	Adds deposit amount	to balance.
	// --------------------------------------------
	public void deposit(double amount) {
		balance += amount;
	}

	// --------------------------------------------
	// Returns balance.
	// --------------------------------------------
	public double getBalance() {
		return balance;
	}

	// --------------------------------------------
	// Returns a string containing the name, account number, and balance.
	// --------------------------------------------
	public String toString() {

	}

	// --------------------------------------------
	// Deducts $10 service fee //
	// --------------------------------------------
	public void chargeFee() {

	}

	// --------------------------------------------
	// Changes the name on the account
	// --------------------------------------------
	public void changeName(String newName) {

	}
}


//	ManageAccounts.java
//
//	Use Account class to create and manage Sally and Joe's
//	bank accounts
// ************************************************************

public class ManageAccounts {

	public static void main(String[] args) {

		Account acct1, acct2;

		//create account1 for Sally with $1000 acct1 = new Account(1000, "Sally", 1111);

		//create account2 for Joe with $500

		//deposit $100 to Joe's account

		//print Joe's new balance (use getBalance())

		//withdraw $50 from Sally's account

		//print Sally's new balance (use getBalance())

		//charge fees to both accounts

		//change the name on Joe's account to Joseph

		//print summary for both accounts
	}
}
